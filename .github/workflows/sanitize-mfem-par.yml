name: build-mfem-par

on:
  workflow_call:

#####################
# Build MFEM Parallel
# Cache:   cache-mfem-par-${{matrix.sanitizer}}
# Upload: upload-mfem-par-${{matrix.sanitizer}}
jobs:
  build-par-mfem:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        sanitizer: [asan, ubsan]
        include:
          - sanitizer: asan
            cxxflags: "-fsanitize=address -fsanitize-address-use-after-scope"
            ldflags: "-fsanitize=address"
          - sanitizer: ubsan
            cxxflags: "-fsanitize=undefined"
            ldflags: "-fsanitize=undefined"
    name: ${{matrix.sanitizer}}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/sanitize/env
      - uses: ./.github/actions/sanitize/mpi
      - name: Cache
        if: ${{ env.DEBUG == 'true' }}
        id: cache
        uses: actions/cache@v4
        with:
          path: mfem/build
          key: cache-mfem-par-${{matrix.sanitizer}}
      - name: Restore LLVM libcxx
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/restore@v4
        with:
          path: ${{env.LLVM_DIR}}
          fail-on-cache-miss: true
          key: cache-llvm-${{env.LLVM_VER}}-${{matrix.sanitizer}}
      - name: Checkout
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4
        with:
          path: mfem
          ref: ubsan
          repository: mfem/mfem  # ðŸ”¥ðŸ”¥ðŸ”¥ Using MFEM/ubsan repository
      - name: Restore Hypre
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/restore@v4
        with:
          path: ${{env.HYPRE_DIR}}
          fail-on-cache-miss: true
          key: ${{runner.os}}-ompi-build-${{env.HYPRE_DIR}}-int32-fp64-v2.5
      - name: Restore Metis
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/restore@v4
        with:
          path: ${{env.METIS_DIR}}
          fail-on-cache-miss: true
          key: ${{runner.os}}-build-${{env.METIS_DIR}}-v2.5
      - name: Build
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: mfem/github-actions/build-mfem@v2.5
        env:
          CXXFLAGS: ${{matrix.cxxflags}} ${{env.LLVM_CXXFLAGS}} ${{env.MPI_INC}}
          LDFLAGS: ${{matrix.ldflags}} ${{env.LLVM_LDFLAGS}} ${{env.MPI_LIB}}
        with:
          mpi: par
          mfem-dir: mfem
          os: ${{runner.os}}
          library-only: true
          build-system: cmake
          hypre-dir: ${{env.HYPRE_DIR}}
          metis-dir: ${{env.METIS_DIR}}
          config-options: >-
            -GNinja
            -DMPICXX=${{env.CXX}}
            -DCMAKE_CXX_STANDARD=17
            -DMFEM_USE_MEMALLOC=OFF
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_VERBOSE_MAKEFILE=ON
            -DCMAKE_CXX_COMPILER=${{env.CXX}}
            -DCMAKE_CXX_FLAGS_RELEASE='-g -O1 -fno-omit-frame-pointer'
      - name: Delete object files
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        working-directory: mfem/build
        run: find . -type f -name '*.o' -delete
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: upload-mfem-par-${{matrix.sanitizer}}
          path: mfem/build
          if-no-files-found: error
          retention-days: 1
          overwrite: false