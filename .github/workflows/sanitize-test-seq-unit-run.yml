name: test-seq-unit-run

on:
  workflow_call:
    inputs:
      DEBUG:
        type: string
        default: 'true'
        required: false
      LSAN_DIR:
        description: 'LSAN suppression directory'
        required: false
        type: string
        default: 'lsan'
      LSAN_FILE:
        description: 'LSAN suppression file'
        required: false
        type: string
        default: 'lsan.supp'

######################################
# Unit tests MFEM Serial (Split & Run)
jobs:
  test-seq-unit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        sanitizer: [asan, msan, ubsan]
        tag: [0, 1, 2, 3]
    name: ${{matrix.sanitizer}}-${{matrix.tag}}
    env:
      DEBUG: ${{inputs.DEBUG}}
      LSAN_DIR: ${{inputs.LSAN_DIR}}
      LSAN_FILE: ${{inputs.LSAN_FILE}}
    steps:
      - name: Setup
        run: |
          echo LLVM_DIR=${GITHUB_WORKSPACE}/llvm >> $GITHUB_ENV
          echo LSAN_OPTIONS="suppressions=${GITHUB_WORKSPACE}/${{env.LSAN_DIR}}/${{env.LSAN_FILE}}" >> $GITHUB_ENV
      - name: Setup (LLVM_LIB)
        run: echo LLVM_LIB=${LLVM_DIR}/lib >> $GITHUB_ENV
      - name: Setup (LLVM_LDFLAGS)
        run: echo "LLVM_LDFLAGS=-L${{env.LLVM_LIB}} -lc++abi -Wl,-rpath,${{env.LLVM_LIB}}" >> $GITHUB_ENV
      - name: Restore LLVM libcxx
        uses: actions/cache/restore@v4
        with:
          path: ${{env.LLVM_DIR}}
          fail-on-cache-miss: true
          key: cache-llvm-${{env.LLVM_VER}}-${{matrix.sanitizer}}
      - name: Restore LSAN file
        uses: actions/cache/restore@v4
        with:
          path: ${{env.LSAN_DIR}}
          fail-on-cache-miss: true
          key: cache-lsan-suppression-file
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: mfem
          ref: ubsan
          repository: mfem/mfem  # ğŸ”¥ğŸ”¥ğŸ”¥ Using MFEM/ubsan repository
      - name: Download MFEM
        uses: actions/download-artifact@v4
        with:
          name: upload-mfem-seq-${{matrix.sanitizer}}
          path: mfem/build
      - name: Ninja Patch
        working-directory: mfem/build
        run: |
          sed -i -e 's/CXX_STATIC_LIBRARY_LINKER__mfem_Release.*/CUSTOM_COMMAND/' build.ninja
          sed -i -e '/^add_test(\[=\[unit_tests\]=\]/ s/)/ "--input-file .\/list-test-names-${{matrix.tag}}" "--min-duration 1")/' tests/unit/CTestTestfile.cmake
      - name: Download Unit Tests
        uses: actions/download-artifact@v4
        with:
          name: upload-unit-seq-${{matrix.sanitizer}}
          path: mfem/build/tests/unit
      - name: Copy Data
        working-directory: mfem/build
        run: |
          ninja cmake_object_order_depends_target_unit_tests
          cp -pR ../tests/unit/data tests/unit
      - name: Set Permissions
        run: find mfem/build/tests/unit -type f -exec chmod 755 {} \;
      - name: Split Unit Tests
        working-directory: mfem/build/tests/unit
        run: |
          ./unit_tests --list-test-names-only | tail -n +2 > list-test-names
          shuf list-test-names -o list-test-names
          split --verbose -n l/4 -d -a 1 list-test-names list-test-names-
      - name: Run Unit Tests ${{matrix.tag}}
        working-directory: mfem/build
        # run: ./unit_tests --input-file ./list-test-names-${{matrix.tag}} --min-duration 1
        run: ${{env.CTEST}} tests/unit -V -R "unit_tests"