name: build-mfem-seq

on:
  workflow_call:
    inputs:
      DEBUG:
        type: boolean
        default: false
        required: false
      CLANG_VER:
        description: 'CLANG version to use'
        required: false
        type: integer
        default: 18
      LLVM_VER:
        description: 'LLVM version to use'
        required: false
        type: string
        default: '19.1.7'
      LLVM_DIR:
        description: 'LLVM path'
        required: false
        type: string
        default: 'llvm'

###################
# Build MFEM Serial
# Cache:   cache-mfem-seq-${{matrix.sanitizer}}
# Upload: upload-mfem-seq-${{matrix.sanitizer}}
jobs:
  build-seq-mfem:
    needs: [build-llvm-libcxx]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        sanitizer: [asan, msan, ubsan]
        include:
          - sanitizer: asan
            cxxflags: "-fsanitize=address -fsanitize-address-use-after-scope"
            ldflags: "-fsanitize=address"
          - sanitizer: msan
            cxxflags: "-fsanitize=memory -fsanitize-memory-track-origins -fsanitize-memory-use-after-dtor"
            ldflags: "-fsanitize=memory"
          - sanitizer: ubsan
            cxxflags: "-fsanitize=undefined"
            ldflags: "-fsanitize=undefined"
    name: ${{matrix.sanitizer}}
    steps:
      - name: Cache
        if: ${{ inputs.DEBUG == 'true' }}
        id: cache
        uses: actions/cache@v4
        with:
          path: mfem/build
          key: cache-mfem-seq-${{matrix.sanitizer}}
      - name: Restore LLVM libcxx
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/restore@v4
        with:
          path: ${{inputs.LLVM_DIR}}
          fail-on-cache-miss: true
          key: cache-llvm-${{inputs.LLVM_VER}}-${{matrix.sanitizer}}
      - name: Setup
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          echo "CC=clang-${{inputs.CLANG_VER}}" >> $GITHUB_ENV
          echo "CXX=clang++-${{inputs.CLANG_VER}}" >> $GITHUB_ENV
          echo "LLVM_INC=${LLVM_DIR}/include/c++/v1" >> $GITHUB_ENV
          echo "LLVM_LIB=${LLVM_DIR}/lib" >> $GITHUB_ENV
      - name: Setup (LLVM)
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          echo "LLVM_CXXFLAGS=-stdlib=libc++ -I${{env.LLVM_INC}} -Isystem${{env.LLVM_INC}}" >> $GITHUB_ENV
          echo "LLVM_LDFLAGS=-L${{env.LLVM_LIB}} -lc++abi -Wl,-rpath,${{env.LLVM_LIB}}" >> $GITHUB_ENV
      - name: Echo
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          echo "[CC] ${{env.CC}}"
          echo "[CXX] ${{env.CXX}}"
          echo "[LLVM_DIR] ${{env.LLVM_DIR}}"
          echo "[LLVM_INC] ${{env.LLVM_INC}}"
          echo "[LLVM_LIB] ${{env.LLVM_LIB}}"
          echo "[LLVM_CXXFLAGS] ${{env.LLVM_CXXFLAGS}}"
          echo "[LLVM_LDFLAGS] ${{env.LLVM_LDFLAGS}}"
      - name: Checkout
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4
        with:
          path: mfem
          ref: ubsan
          repository: mfem/mfem  # ðŸ”¥ðŸ”¥ðŸ”¥ Using MFEM/ubsan repository
      - name: Build
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: mfem/github-actions/build-mfem@v2.5
        env:
          CXXFLAGS: ${{matrix.cxxflags}} ${{env.LLVM_CXXFLAGS}}
          LDFLAGS: ${{matrix.ldflags}} ${{env.LLVM_LDFLAGS}}
        with:
          mpi: seq
          mfem-dir: mfem
          hypre-dir: unused
          metis-dir: unused
          os: ${{runner.os}}
          library-only: true
          build-system: cmake
          config-options: >-
            -GNinja
            -DMPICXX=${{env.CXX}}
            -DCMAKE_CXX_STANDARD=17
            -DMFEM_USE_MEMALLOC=OFF
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_VERBOSE_MAKEFILE=ON
            -DCMAKE_CXX_COMPILER=${{env.CXX}}
            -DCMAKE_CXX_FLAGS_RELEASE='-g -O1 -fno-omit-frame-pointer'
      - name: Delete object files
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        working-directory: mfem/build
        run: find . -type f -name '*.o' -delete
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: upload-mfem-seq-${{matrix.sanitizer}}
          path: mfem/build
          if-no-files-found: error
          retention-days: 1
          overwrite: false
