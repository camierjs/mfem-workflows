---

name: "Sanitizers"

permissions:
  actions: write

on:
  # Run on pushes to main development branches
  push:
    branches: [main]
  # Run on all pull requests
  pull_request:
  # Allow manual triggering for debugging
  workflow_dispatch:

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

###############################################################################
env:
  CLANG_VER: 18
  LLVM_VER: 19.1.7    # https://github.com/llvm/llvm-project/releases
  HYPRE_VER: 2.19.0   # https://github.com/hypre-space/hypre/releases
  METIS_VER: 4.0.3
  # https://clang.llvm.org/docs/AddressSanitizer.html
  ASAN_OPTIONS: "detect_leaks=1,
                 strict_init_order=1,
                 strict_string_checks=1,
                 check_initialization_order=1,
                 detect_stack_use_after_return=1"
  # https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html
  UBSAN_OPTIONS: "halt_on_error=1, print_stacktrace=1"
  # https://clang.llvm.org/docs/MemorySanitizer.html
  MSAN_OPTIONS: "poison_in_dtor=1"
  LSAN_DIR: lsan
  LSAN_FILE: lsan.supp
  CMAKE_GENERATOR: Ninja
  CTEST: ctest -j --test-load $(nproc) --schedule-random --stop-on-failure --output-on-failure --test-dir
  DEBUG: true  # if 'true', then use cache to speed up the workflow while debugging

jobs:
  #############################################################################
  build-hypre:
    uses: ./.github/workflows/sanitize-hypre.yml

  build-metis:
    uses: ./.github/workflows/sanitize-metis.yml

  build-file-lsan:
    uses: ./.github/workflows/sanitize-lsan.yml

  build-llvm-libcxx:
    uses: ./.github/workflows/sanitize-libcxx.yml

  #############################################################################
  # Build MFEM Serial/Parallel
  build-seq-mfem:
    needs: [build-llvm-libcxx]
    uses: ./.github/workflows/sanitize-mfem-seq.yml
  build-par-mfem:
    needs: [build-llvm-libcxx, build-hypre, build-metis]
    uses: ./.github/workflows/sanitize-mfem-par.yml

  #############################################################################
  # Check MFEM Serial/Parallel
  test-seq-check:
    needs: [build-file-lsan, build-llvm-libcxx, build-seq-mfem]
    uses: ./.github/workflows/sanitize-test-seq-check.yml
  test-par-check:
    needs: [build-file-lsan, build-llvm-libcxx, build-par-mfem]
    uses: ./.github/workflows/sanitize-test-par-check.yml

  #############################################################################
  # Examples MFEM Serial/Parallel
  test-seq-examples:
    needs: [build-file-lsan, build-llvm-libcxx, test-seq-check]
    uses: ./.github/workflows/sanitize-test-seq-examples.yml
  test-par-examples:
    needs: [build-file-lsan, build-llvm-libcxx, test-par-check]
    uses: ./.github/workflows/sanitize-test-par-examples.yml

  #############################################################################
  # Miniapps MFEM Serial/Parallel
  test-seq-miniapps:
    needs: [build-file-lsan, build-llvm-libcxx, test-seq-check]
    uses: ./.github/workflows/sanitize-test-seq-miniapps.yml
  test-par-miniapps:
    needs: [build-file-lsan, build-llvm-libcxx, test-par-check]
    uses: ./.github/workflows/sanitize-test-par-miniapps.yml

  #############################################################################
  # Tests Unit Miniapps MFEM Serial/Parallel
  test-seq-unit-miniapps:
    needs: [build-file-lsan, build-llvm-libcxx, test-seq-check]
    uses: ./.github/workflows/sanitize-test-seq-unit-miniapps.yml
  test-par-unit-miniapps:
    needs: [build-file-lsan, build-llvm-libcxx, test-par-check]
    uses: ./.github/workflows/sanitize-test-par-unit-miniapps.yml

  #############################################################################
  # Unit tests MFEM Serial/Parallel (Compile, Split & Run)
  build-seq-unit:
    needs: [build-file-lsan, build-llvm-libcxx, test-seq-check]
    uses: ./.github/workflows/sanitize-test-seq-unit-build.yml
  test-seq-unit:
    needs: [build-file-lsan, build-llvm-libcxx, build-seq-unit]
    uses: ./.github/workflows/sanitize-test-seq-unit-run.yml

  build-par-unit:
    needs: [build-file-lsan, build-llvm-libcxx, test-par-check]
    uses: ./.github/workflows/sanitize-test-par-unit-build.yml
  test-par-unit:
    needs: [build-file-lsan, build-llvm-libcxx, build-par-unit]
    uses: ./.github/workflows/sanitize-test-par-unit-run.yml