name: "Sanitizers"

permissions:
  actions: write

on:
  # Run on pushes to main development branches
  push:
    branches: [main]
  # Run on all pull requests
  pull_request:
  # Allow manual triggering for debugging
  workflow_dispatch:

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  
  build-hypre:
    uses: ./.github/workflows/sanitize-build-hypre.yml
  build-metis:
    uses: ./.github/workflows/sanitize-build-metis.yml
  build-lsan:
    uses: ./.github/workflows/sanitize-build-lsan.yml
  build-libcxx:
    uses: ./.github/workflows/sanitize-build-libcxx.yml

  build-mfem-par:
    needs: [build-libcxx, build-hypre, build-metis]
    uses: ./.github/workflows/sanitize-build-mfem-par.yml
  # build-mfem-seq:
  #   needs: [build-libcxx]
  #   uses: ./.github/workflows/sanitize-build-mfem-seq.yml
  build-mfem-seq-asan:
    runs-on: ubuntu-latest
    name: asan
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/sanitize/mfem
        env:
          CXXFLAGS: ${{env.CXXFLAGS}} -fsanitize=address -fsanitize-address-use-after-scope
          LDFLAGS: ${{env.LDFLAGS}} -fsanitize=address
        with:
          key: mfem-seq-asan
  build-mfem-seq-msan:
    runs-on: ubuntu-latest
    name: msan
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/sanitize/mfem
        env:
          CXXFLAGS: ${{env.CXXFLAGS}} -fsanitize=memory -fsanitize-memory-track-origins -fsanitize-memory-use-after-dtor
          LDFLAGS: ${{env.LDFLAGS}} -fsanitize=memory
        with:
          key: mfem-seq-msan
  build-mfem-seq-ubsan:
    runs-on: ubuntu-latest
    name: ubsan
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/sanitize/mfem
        env:
          CXXFLAGS: ${{env.CXXFLAGS}} -fsanitize=undefined
          LDFLAGS: ${{env.LDFLAGS}} -fsanitize=undefined
        with:
          key: mfem-seq-ubsan

  check-par:
    needs: [build-lsan, build-libcxx, build-mfem-par]
    uses: ./.github/workflows/sanitize-check-par.yml
  check-seq:
    needs: [build-lsan, build-libcxx, build-mfem-seq]
    uses: ./.github/workflows/sanitize-check-seq.yml

  examples-par:
    needs: [build-lsan, build-libcxx, check-par]
    uses: ./.github/workflows/sanitize-examples-par.yml
  examples-seq:
    needs: [build-lsan, build-libcxx, check-seq]
    uses: ./.github/workflows/sanitize-examples-seq.yml

  miniapps-par:
    needs: [build-lsan, build-libcxx, check-par]
    uses: ./.github/workflows/sanitize-miniapps-par.yml
  miniapps-seq:
    needs: [build-lsan, build-libcxx, check-seq]
    uses: ./.github/workflows/sanitize-miniapps-seq.yml

  tests-miniapps-par:
    needs: [build-lsan, build-libcxx, check-par]
    uses: ./.github/workflows/sanitize-tests-miniapps-par.yml
  tests-miniapps-seq:
    needs: [build-lsan, build-libcxx, check-seq]
    uses: ./.github/workflows/sanitize-tests-miniapps-seq.yml

  tests-unit-build-par:
    needs: [build-lsan, build-libcxx, check-par]
    uses: ./.github/workflows/sanitize-tests-unit-build-par.yml
  tests-unit-build-seq:
    needs: [build-lsan, build-libcxx, check-seq]
    uses: ./.github/workflows/sanitize-tests-unit-build-seq.yml

  tests-unit-run-par:
    needs: [build-lsan, build-libcxx, tests-unit-build-par]
    uses: ./.github/workflows/sanitize-tests-unit-run-par.yml
  tests-unit-run-seq:
    needs: [build-lsan, build-libcxx, tests-unit-build-seq]
    uses: ./.github/workflows/sanitize-tests-unit-run-seq.yml