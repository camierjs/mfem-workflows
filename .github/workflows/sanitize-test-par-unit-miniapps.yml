name: test-par-unit-miniapps

on:
  workflow_call:
    inputs:
      DEBUG:
        type: string
        default: 'true'
        required: false
      LSAN_DIR:
        description: 'LSAN suppression directory'
        required: false
        type: string
        default: 'lsan'
      LSAN_FILE:
        description: 'LSAN suppression file'
        required: false
        type: string
        default: 'lsan.supp'
      LLVM_VER:
        description: 'LLVM version to use'
        required: false
        type: string
        default: '19.1.7'

###################################
# Tests Unit Miniapps MFEM Parallel
jobs:
  test-par-unit-miniapps:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        sanitizer: [asan, ubsan]
    name: ${{matrix.sanitizer}}
    env:
      DEBUG: ${{inputs.DEBUG}}
      LSAN_DIR: ${{inputs.LSAN_DIR}}
      LSAN_FILE: ${{inputs.LSAN_FILE}}
      LLVM_VER: ${{inputs.LLVM_VER}}
    steps:
      - name: Setup
        run: |
          sudo apt-get install openmpi-bin libopenmpi-dev
          echo LLVM_DIR=${GITHUB_WORKSPACE}/llvm >> $GITHUB_ENV
          echo HYPRE_DIR=hypre-${{env.HYPRE_VER}} >> $GITHUB_ENV
          echo METIS_DIR=metis-${{env.METIS_VER}} >> $GITHUB_ENV
          echo LSAN_OPTIONS="suppressions=${GITHUB_WORKSPACE}/${{env.LSAN_DIR}}/${{env.LSAN_FILE}}" >> $GITHUB_ENV
      - name: Restore LLVM libcxx
        uses: actions/cache/restore@v4
        with:
          path: ${{env.LLVM_DIR}}
          fail-on-cache-miss: true
          key: cache-llvm-${{env.LLVM_VER}}-${{matrix.sanitizer}}
      - name: Restore Hypre
        uses: actions/cache/restore@v4
        with:
          path: ${{env.HYPRE_DIR}}
          fail-on-cache-miss: true
          key: ${{runner.os}}-ompi-build-${{env.HYPRE_DIR}}-int32-fp64-v2.5
      - name: Restore Metis
        uses: actions/cache/restore@v4
        with:
          path: ${{env.METIS_DIR}}
          fail-on-cache-miss: true
          key: ${{runner.os}}-build-${{env.METIS_DIR}}-v2.5
      - name: Restore LSAN
        uses: actions/cache/restore@v4
        with:
          path: ${{env.LSAN_DIR}}
          fail-on-cache-miss: true
          key: cache-lsan-suppression-file
      - name: Hypre/Metis links
        run: ln -s -f ${{env.HYPRE_DIR}} hypre && ln -s -f ${{env.METIS_DIR}} metis-4.0
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: mfem
          ref: ubsan
          repository: mfem/mfem  # ðŸ”¥ðŸ”¥ðŸ”¥ Using MFEM/ubsan repository
      - name: Download MFEM
        uses: actions/download-artifact@v4
        with:
          name: upload-mfem-par-${{matrix.sanitizer}}
          path: mfem/build
      - name: Ninja Patch
        working-directory: mfem/build
        run: |
          sed -i -e 's/CXX_STATIC_LIBRARY_LINKER__mfem_Release.*/CUSTOM_COMMAND/' build.ninja
          sed -i -e '/build tests\/unit\/all:/ s/tests\/unit\/[^ ]*unit_tests[^ ]*//g' build.ninja
      - name: Copy Data
        working-directory: mfem/build
        run: |
          ninja cmake_object_order_depends_target_unit_tests
          cp -pR ../tests/unit/data tests/unit
      - name: Build Tests Unit Miniapps
        working-directory: mfem/build
        run: ninja -v tests/unit/all
      - name: Run Unit Tests Miniapps
        working-directory: mfem/build
        run: ${{env.CTEST}} tests/unit -E "unit_tests"