name: build-mfem-seq
on:
  workflow_call:
jobs:
  # build-mfem-seq-asan:
  #   runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     sanitizer: [asan, msan, ubsan]
    #     include:
    #       - sanitizer: asan
    #         cxxflags: "-fsanitize=address -fsanitize-address-use-after-scope"
    #         ldflags: "-fsanitize=address"
    #       - sanitizer: msan
    #         cxxflags: "-fsanitize=memory -fsanitize-memory-track-origins -fsanitize-memory-use-after-dtor"
    #         ldflags: "-fsanitize=memory"
    #       - sanitizer: ubsan
    #         cxxflags: "-fsanitize=undefined"
    #         ldflags: "-fsanitize=undefined"
    # name: ${{matrix.sanitizer}}
    # steps:
    #   - uses: actions/checkout@v4
    #   - uses: ./.github/actions/sanitize/mfem
    #     with:
    #       key: mfem-seq-${{matrix.sanitizer}}

  build-mfem-seq-asan:
    runs-on: ubuntu-latest
    name: asan
    env:
      CXXFLAGS: ${{env.CXXFLAGS}} -fsanitize=address -fsanitize-address-use-after-scope
      LDFLAGS: ${{env.LDFLAGS}} -fsanitize=address
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/sanitize/mfem
        with:
          key: mfem-seq-asan

  build-mfem-seq-msan:
    runs-on: ubuntu-latest
    name: msan
    env:
      CXXFLAGS: ${{env.CXXFLAGS}} -fsanitize=memory -fsanitize-memory-track-origins -fsanitize-memory-use-after-dtor
      LDFLAGS: ${{env.LDFLAGS}} -fsanitize=memory
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/sanitize/mfem
        with:
          key: mfem-seq-msan

  build-mfem-seq-ubsan:
    runs-on: ubuntu-latest
    name: ubsan
    env:
      CXXFLAGS: ${{env.CXXFLAGS}} -fsanitize=undefined
      LDFLAGS: ${{env.LDFLAGS}} -fsanitize=undefined
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/sanitize/mfem
        with:
          key: mfem-seq-ubsan
