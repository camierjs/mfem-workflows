name: 'Restore state'

description: 'Restore state to be able to run checks, tests'

inputs:
  cache-key:
    description: 'Key for the cache/upload'
    required: true
    type: string
  cach-path:
    description: 'path to what needs to be restored'
    required: true
    type: string
  artifact-name:
    description: 'Name of the artifact to download'
    required: true
    type: string
  par:
    description: 'Whether to build for parallel (true/false)'
    required: false
    type: boolean
    default: false

runs:
  using: 'composite'
  steps:  
    - name: Cache
      if: ${{ env.DEBUG == 'true' }}
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{inputs.cache-path}}
        key: cache-${{inputs.cache-key}}

    - name: Restore LLVM libcxx
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      uses: actions/cache/restore@v4
      with:
        path: ${{env.LLVM_DIR}}
        fail-on-cache-miss: true
        key: cache-llvm-${{env.LLVM_VER}}-${{matrix.sanitizer}}
  
    - name: Restore Hypre
      if: ${{ inputs.par && steps.cache.outputs.cache-hit != 'true' }}
      uses: actions/cache/restore@v4
      with:
        path: ${{env.HYPRE_DIR}}
        fail-on-cache-miss: true
        key: ${{runner.os}}-ompi-build-${{env.HYPRE_DIR}}-int32-fp64-v2.5
  
    - name: Restore Metis
      if: ${{ inputs.par && steps.cache.outputs.cache-hit != 'true' }}
      uses: actions/cache/restore@v4
      with:
        path: ${{env.METIS_DIR}}
        fail-on-cache-miss: true
        key: ${{runner.os}}-build-${{env.METIS_DIR}}-v2.5

    - name: Restore LSAN
      if: ${{ inputs.par && steps.cache.outputs.cache-hit != 'true' }}
      uses: actions/cache/restore@v4
      with:
        path: ${{env.LSAN_DIR}}
        fail-on-cache-miss: true
        key: cache-lsan-suppression-file
  
    - name: Hypre/Metis links
      if: ${{ inputs.par && steps.cache.outputs.cache-hit != 'true' }}
      run: ln -s -f ${{env.HYPRE_DIR}} hypre && ln -s -f ${{env.METIS_DIR}} metis-4.0
      shell: bash

    - name: Checkout
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      uses: actions/checkout@v4
      with:
        path: mfem
        ref: ubsan
        repository: mfem/mfem  # ðŸ”¥ðŸ”¥ðŸ”¥ Using MFEM/ubsan repository

    - name: Download MFEM
      uses: actions/download-artifact@v4
      with:
        name: upload-${{inputs.artifact-name}}
        path: mfem/build

    - name: Ninja Patch
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      working-directory: mfem/build
      run: sed -i -e 's/CXX_STATIC_LIBRARY_LINKER__mfem_Release.*/CUSTOM_COMMAND/' build.ninja
      shell: bash
