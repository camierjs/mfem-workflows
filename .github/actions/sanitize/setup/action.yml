name: 'Setup state'
description: 'Sets up the state to be able to run build & run'

inputs:
  par:
    description: 'Whether to build for parallel (true/false)'
    default: false
  sanitizer:
    description: 'Sanitizer to use (asan, msan, ubsan)'
    default: asan

runs:
  using: 'composite'
  steps:
    - uses: actions/cache/restore@v4  # Cache for LLVM libcxx
      with:
        path: ${{env.LLVM_DIR}}
        fail-on-cache-miss: true
        key: build-libcxx-${{env.LLVM_VER}}-${{inputs.sanitizer}}

    - uses: ./.github/actions/sanitize/mpi
      if: ${{inputs.par == 'true'}}

    - uses: actions/cache/restore@v4  # Cache for Hypre
      if: ${{inputs.par == 'true'}}
      with:
        path: ${{env.HYPRE_DIR}}
        fail-on-cache-miss: true
        key: ${{runner.os}}-ompi-build-${{env.HYPRE_DIR}}-int32-fp64-v2.5

    - uses: actions/cache/restore@v4  # Cache for Metis
      if: ${{inputs.par == 'true'}}
      with:
        path: ${{env.METIS_DIR}}
        fail-on-cache-miss: true
        key: ${{runner.os}}-build-${{env.METIS_DIR}}-v2.5

    - name: Hypre/Metis links
      if: ${{inputs.par == 'true'}}
      run: ln -s -f ${{env.HYPRE_DIR}} hypre && ln -s -f ${{env.METIS_DIR}} metis-4.0
      shell: bash

    - uses: actions/cache/restore@v4  # Cache for LSAN suppression file
      with:
        path: ${{env.LSAN_DIR}}
        fail-on-cache-miss: true
        key: build-lsan-suppression-file

    - uses: actions/checkout@v4  # Checkout the repository
      with:
        path: mfem
        ref: ${{env.BRANCH}}  # ðŸ”¥ðŸ”¥ðŸ”¥ to remove to get the current one
        repository: ${{env.REPOSITORY}}
