name: 'MFEM Compilation'
description: 'MFEM Compilation'

inputs:
  key:
    description: 'Key for the cache/upload'
    default: none
  par:
    description: 'Whether to build for parallel (true/false)'
    default: false
  sanitizer:
    description: 'Sanitizer to use (asan, msan, ubsan)'
    default: 'asan'

runs:
  using: 'composite'
  steps:
    - uses: ./.github/actions/sanitize/config
    - name: DEBUG Cache
      if: ${{env.DEBUG == 'true'}}
      id: debug
      uses: actions/cache@v4
      with:
        path: mfem/build
        key: cache-${{inputs.key}}

    - name: Setup
      if: ${{steps.debug.outputs.cache-hit != 'true'}}
      uses: ./.github/actions/sanitize/setup
      with:
        par: ${{inputs.par}}

    - name: Build with ASAN
      if: inputs.sanitizer == 'asan'
      run: echo CXXFLAGS=${{env.CXXFLAGS}} ${{env.ASAN_CXXFLAGS}} >> $GITHUB_ENV

    - name: Build with MSAN
      if: inputs.sanitizer == 'msan'
      run: echo CXXFLAGS=${{env.CXXFLAGS}} ${{env.MSAN_CXXFLAGS}} >> $GITHUB_ENV

    - name: Build with UBSAN
      if: inputs.sanitizer == 'ubsan'
      run: echo CXXFLAGS=${{env.CXXFLAGS}} ${{env.UBSAN_CXXFLAGS}} >> $GITHUB_ENV

    - name: MFEM Build
      if: ${{steps.debug.outputs.cache-hit != 'true'}}
      uses: mfem/github-actions/build-mfem@v2.5
      env:
        CXXFLAGS: ${{matrix.cxxflags}} ${{env.CXXFLAGS}}
        LDFLAGS:   ${{matrix.ldflags}}  ${{env.LDFLAGS}}
      with:
        mpi: ${{ inputs.par == 'false' && 'seq' || 'par' }}
        mfem-dir: mfem
        os: ${{runner.os}}
        library-only: true
        build-system: cmake
        hypre-dir: ${{env.HYPRE_DIR}}
        metis-dir: ${{env.METIS_DIR}}
        config-options: >-
          -GNinja
          -DMPICXX=${{env.CXX}}
          -DCMAKE_CXX_STANDARD=17
          -DMFEM_USE_MEMALLOC=OFF
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_VERBOSE_MAKEFILE=ON
          -DCMAKE_CXX_COMPILER=${{env.CXX}}
          -DCMAKE_CXX_FLAGS_RELEASE='-g -O1 -fno-omit-frame-pointer'
  
    - name: Delete object files
      if: ${{steps.debug.outputs.cache-hit != 'true'}}
      working-directory: mfem/build
      run: find . -type f -name '*.o' -delete
      shell: bash

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: upload-${{inputs.key}}
        path: mfem/build
        if-no-files-found: error
        retention-days: 1
        overwrite: false

