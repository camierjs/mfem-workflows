name: 'Setup Environment'
description: 'Sets up environment variables for MFEM sanitizer workflow'
inputs:

  DEBUG:
    type: string
    default: 'true'
    required: false

  LSAN_DIR:
    description: 'LSAN suppression directory'
    required: false
    type: string
    default: 'lsan'

  LSAN_FILE:
    description: 'LSAN suppression file'
    required: false
    type: string
    default: 'lsan.supp'

  CLANG_VER:
    description: 'CLANG version to use'
    required: false
    type: number
    default: 18

  LLVM_VER:
    description: 'LLVM version to use'
    required: false
    type: string
    default: '19.1.7'

  HYPRE_VER:
    description: 'HYPRE version to build'
    required: false
    type: string
    default: '2.19.0'

  METIS_VER:
    description: 'METIS version to build'
    required: false
    type: string
    default: '4.0.3'

  Parallel:
    description: 'Whether to set up for parallel build (true/false)'
    required: false
    type: string
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Env
      run: |
        echo CC=clang-${{inputs.CLANG_VER}} >> $GITHUB_ENV
        echo CXX=clang++-${{inputs.CLANG_VER}} >> $GITHUB_ENV
        echo LLVM_DIR=${{github.workspace}}/llvm >> $GITHUB_ENV
        echo LSAN_OPTIONS=suppressions=${{github.workspace}}/${{inputs.LSAN_DIR}}/${{inputs.LSAN_FILE}} >> $GITHUB_ENV
      shell: bash

    - name: Env (bis)
      run: |
        echo LLVM_INC=${{inputs.LLVM_DIR}}/include/c++/v1 >> $GITHUB_ENV
        echo LLVM_LIB=${{inputs.LLVM_DIR}}/lib >> $GITHUB_ENV
      shell: bash

    - name: Env (ter)
      run: |
        echo LLVM_CXXFLAGS=-stdlib=libc++ -I${{inputs.LLVM_INC}} -Isystem${{inputs.LLVM_INC}} >> $GITHUB_ENV
        echo LLVM_LDFLAGS=-L${{inputs.LLVM_LIB}} -lc++abi -Wl,-rpath,${{inputs.LLVM_LIB}} >> $GITHUB_ENV
      shell: bash
  
    - name: Echo
      run: |
        echo "[CC] ${{ inputs.CC }}"
        echo "[CXX] ${{ inputs.CXX }}"
        echo "[LLVM_DIR] ${{ inputs.LLVM_DIR }}"
        echo "[LLVM_INC] ${{ inputs.LLVM_INC }}"
        echo "[LLVM_LIB] ${{ inputs.LLVM_LIB }}"
        echo "[LLVM_CXXFLAGS] ${{inputs.LLVM_CXXFLAGS}}"
        echo "[LLVM_LDFLAGS] ${{inputs.LLVM_LDFLAGS}}"
      shell: bash
  
    - name: Setup (Parallel)
      if: ${{ inputs.Parallel == 'true' }}
      run: |
        sudo apt-get install openmpi-bin libopenmpi-dev
      shell: bash

    - name: Env (Parallel)
      if: ${{ inputs.Parallel == 'true' }}
      run: |
        echo PRTE_MCA_rmaps_default_mapping_policy=:oversubscribe >> $GITHUB_ENV
        echo MPI_INC=$(mpicxx --showme:compile) >> $GITHUB_ENV
        echo MPI_LIB=$(mpicxx --showme:link) >> $GITHUB_ENV
        echo HYPRE_DIR=hypre-${{inputs.HYPRE_VER}} >> $GITHUB_ENV
        echo HYPRE_TGZ=v${{inputs.HYPRE_VER}}.tar.gz >> $GITHUB_ENV
      shell: bash

    - name: Echo (Parallel)
      if: ${{ inputs.Parallel == 'true' }}
      run: |
        echo "[MPI] Version: $(mpicxx --showme:version)"
        echo "[MPI] Compile: $(mpicxx --showme:compile)"
        echo "[MPI] Link: $(mpicxx --showme:link)"
        echo "[HYPRE_DIR] ${{ inputs.HYPRE_DIR }}"
        echo "[HYPRE_TGZ] ${{ inputs.HYPRE_TGZ }}"
        echo "[METIS_DIR] ${{ inputs.METIS_DIR }}"
      shell: bash